@page
@model My_SocNet_Win.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<style>
    .like-button, .dislike-button {
        cursor: pointer;
        font-size: 1.5em;
        margin-right: 10px;
        background: none;
        border: none;
        color: inherit;
    }
    .liked {
        color: #c40434;
    }
    .disliked {
        color: #7104c4;
    }
</style>

@if(User.Identity.IsAuthenticated)
{
    <div style="text-align: right;">
        <a class="btnhower" href="/CreatePost">Create topic &#xFF0B;</a>
    </div>
    <div style="align-items: center; margin: 20px;"> 
        @foreach(var post in Model.RecentPosts)
        {
            if (post == null) continue;
            <div style="background-color: #2a2b38; color: white; margin: 10px;" class="card">
                @if (post.Images != null && post.Images.Count > 0)
                {
                    <div class="card-header" style="background-image: url('data:image/jpeg;base64,@Convert.ToBase64String(post.Images[0])'); background-size: cover; background-position: center; height: 200px;">
                    </div>
                }
                else
                {
                    <div class="card-header">
                        <h3>@post.Title</h3>
                    </div>
                }
                <a href="Index" style="text-decoration: none; color: inherit;">
                    <div class="card-body">
                        <h3>@post.Title</h3>
                        <p>@post.Text</p>
                    </div>
                </a>
                <div class="card-footer">
                    <p>Created by: @Model.UserNames[post.CreatorID]</p>
                    <p>Created at: @post.DateOfCreation</p>
                    <div style="display: flex; align-items: center;">
                        <form method="post" asp-page-handler="UpdateLikesDislikes" onsubmit="return handleLikeDislike(event, this)">
                            <input type="hidden" name="PostId" value="@post.ID" />
                            <input type="hidden" name="Type" value="like" />
                            <input type="hidden" name="Delta" value="1" />
                            <button type="submit" class="like-button @(post.Likes > 0 ? "liked" : "")">
                                <i class="fas fa-heart"></i>
                            </button>
                            <span id="like-count-@post.ID" style="margin-right: 1em;">@post.Likes</span>
                        </form>
                        <form method="post" asp-page-handler="UpdateLikesDislikes" onsubmit="return handleLikeDislike(event, this)">
                            <input type="hidden" name="PostId" value="@post.ID" />
                            <input type="hidden" name="Type" value="dislike" />
                            <input type="hidden" name="Delta" value="1" />
                            <button type="submit" class="dislike-button @(post.Dislikes > 0 ? "disliked" : "")">
                                <i class="fas fa-heart-broken"></i>
                            </button>
                            <span id="dislike-count-@post.ID" style="margin-right: 1em;">@post.Dislikes</span>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <h2>This page is main page of @ViewData["Name"]</h2>
        <p>
            This Social network was created as a project for my studies.
            <br>
            You can see all data after logging in.
        </p>
    </div>
}

@section Scripts {
    <script>
        function handleLikeDislike(event, form) {
            event.preventDefault();
            const postId = form.querySelector('input[name="PostId"]').value;
            const type = form.querySelector('input[name="Type"]').value;
            const delta = parseInt(form.querySelector('input[name="Delta"]').value);

            const likeButton = form.closest('.card-footer').querySelector('.like-button');
            const dislikeButton = form.closest('.card-footer').querySelector('.dislike-button');
            const likeCountElement = document.getElementById(`like-count-${postId}`);
            const dislikeCountElement = document.getElementById(`dislike-count-${postId}`);

            if (type === 'like') {
                if (likeButton.classList.contains('liked')) {
                    likeButton.classList.remove('liked');
                    likeCountElement.textContent = parseInt(likeCountElement.textContent) - 1;
                    form.querySelector('input[name="Delta"]').value = -1;
                } else {
                    likeButton.classList.add('liked');
                    likeCountElement.textContent = parseInt(likeCountElement.textContent) + 1;
                    form.querySelector('input[name="Delta"]').value = 1;
                    if (dislikeButton.classList.contains('disliked')) {
                        dislikeButton.classList.remove('disliked');
                        dislikeCountElement.textContent = parseInt(dislikeCountElement.textContent) - 1;
                    }
                }
            } else if (type === 'dislike') {
                if (dislikeButton.classList.contains('disliked')) {
                    dislikeButton.classList.remove('disliked');
                    dislikeCountElement.textContent = parseInt(dislikeCountElement.textContent) - 1;
                    form.querySelector('input[name="Delta"]').value = -1;
                } else {
                    dislikeButton.classList.add('disliked');
                    dislikeCountElement.textContent = parseInt(dislikeCountElement.textContent) + 1;
                    form.querySelector('input[name="Delta"]').value = 1;
                    if (likeButton.classList.contains('liked')) {
                        likeButton.classList.remove('liked');
                        likeCountElement.textContent = parseInt(likeCountElement.textContent) - 1;
                    }
                }
            }

            const formData = new FormData(form);
            fetch(form.action, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (!response.ok) {
                    console.error('Failed to save like/dislike');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }
    </script>
}